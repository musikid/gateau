[changelog]
header = """
# Changelog\n

"""

body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}]\
      (https://github.com/musikid/gateau/releases/tag/{{ version }}) \
      - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }} \
          ([{{ commit.id | truncate(length=6, end="") }}]\
            (https://github.com/musikid/gateau/tree/{{ commit.id }}))\
    {% endfor %}
{% endfor %}\n
"""

trim = true
footer = """
<!-- generated by git-cliff -->
"""

[git]
conventional_commits = true
filter_unconventional = false

split_commits = false

commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/musikid/gateau/issues/${2}))" },
]

commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^docs\\(changelog\\):", skip = true },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^ci", group = "CI" },
    { message = "^chore\\(release\\):", skip = true },
    { message = "^chore", group = "Miscellaneous Tasks" },
    { body = ".*security", group = "Security" },
]

protect_breaking_commits = true

filter_commits = false

tag_pattern = "v[0-9]*"
skip_tags = "v0.1.0-beta.1"
ignore_tags = ""

topo_order = false

sort_commits = "oldest"
