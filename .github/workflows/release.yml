name: Generate changelog and create release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  changelog:
    name: Generate changelog and create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff/release.toml

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.git-cliff.outputs.content }}

  release:
    name: Build binaries and upload to release
    needs: changelog
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            output: gateau
            archive: { type: tar, output: tar.gz }
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            output: gateau
            archive: { type: tar, output: tar.gz }
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            output: gateau.exe
            target: x86_64-pc-windows-msvc
            archive: { type: zip, output: zip }
          - os: windows-latest
            output: gateau.exe
            target: x86_64-pc-windows-gnu
            archive: { type: zip, output: zip }

          - os: macos-latest
            output: gateau
            target: x86_64-apple-darwin
            archive: { type: tar, output: tar.gz }

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install musl-tools

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Compile
        run: cargo build --verbose --locked --profile=release-opt --target=${{ matrix.target }} --features=bundled

      - name: Move binary
        shell: bash
        run: mv target/${{ matrix.target }}/release-opt/${{ matrix.output }} ${{ matrix.output }}

      - name: Create archive
        uses: thedoctor0/zip-release@0.7.0
        with:
          type: ${{ matrix.archive.type }}
          filename: gateau.${{ matrix.target }}.${{ matrix.archive.output }}
          path: ${{ matrix.output }} README.md LICENSE

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: gateau.${{ matrix.target }}.${{ matrix.archive.output }}
